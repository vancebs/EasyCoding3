#! /bin/bash

_APP_NAME="EasyCoding2"
_CMD_NAME="ec"
_BASHRC="$HOME/.bashrc"
_SCRIPT_PATH=$(readlink -f "$0")
_SCRIPT_DIR=$(dirname ${_SCRIPT_PATH})
_EC_PATH="$_SCRIPT_DIR/ec3.sh"
_NEED_INSTALL="TRUE"
_NEED_UPGRADE="FALSE"
_INSTALL_KEY="alias $_CMD_NAME='source $_EC_PATH'"
_GLOBAL_CONFIG_PATH="$_SCRIPT_DIR/GlobalConfig.py"
_GLOBAL_CONFIG_TEMPLATE_PATH="$_SCRIPT_DIR/cfg/base/GlobalConfig.py"
_GLOBAL_BASH_CONFIG_PATH="$_SCRIPT_DIR/GlobalBashConfig.sh"

# start info
echo "Start installing ..."

# check whether need install
while read _LINE; do
    if [ "$_LINE" == "$_INSTALL_KEY" ]; then
        _NEED_INSTALL="FALSE"
        break
    fi
done < ${_BASHRC}

# check result
if [ "$_NEED_INSTALL" == "TRUE" ]; then
    # install
    echo "# Install EasyCoding3" >> ${_BASHRC}
    echo "$_INSTALL_KEY" >> ${_BASHRC}
    echo "source $_SCRIPT_DIR/auto_complete" >> ${_BASHRC}
    echo >> ${_BASHRC}
    
    # success
    echo "Installing finished."
    echo "Now you can restart your terminal and use $_APP_NAME with command \"$_CMD_NAME\"."
else
    # unnecessary to install
    echo "Already installed before."
    echo "If you still cannot use $_APP_NAME. Please restart your terminal and try again"
fi

# copy GlobalConfig.py if necessary
if [ -e ${_GLOBAL_CONFIG_PATH} ]; then
    echo "GlobalConfig.py already exists. Ignore copy"
else
    cp -f ${_GLOBAL_CONFIG_TEMPLATE_PATH} ${_GLOBAL_CONFIG_PATH}
fi

# create global bash config if necessary
if [ -e ${_GLOBAL_BASH_CONFIG_PATH} ]; then
    echo "GlobalBashConfig.sh already exists. Ignore create"
else
    echo "export PYTHON_BIN=/usr/bin/python3.6" > ${_GLOBAL_BASH_CONFIG_PATH}
fi

# pause
echo "press enter key to exit"
read _PAUSE

# clean up
unset _BASHRC
unset _CMD_NAME
unset _LINE
unset _SCRIPT_PATH
unset _SCRIPT_DIR
unset _EC_PATH
unset _INSTALL_KEY
unset _NEED_INSTALL
unset _GLOBAL_CONFIG_PATH
unset _GLOBAL_CONFIG_TEMPLATE_PATH
unset _GLOBAL_BASH_CONFIG_PATH
